{"version":3,"sources":["components/Footer.js","reducers/useTodos.js","utils.js","containers/TodoItem.js","hooks/useDoubleClick.js","containers/TodoList.js","hooks/useOnEnter.js","hooks/useInput.js","serviceWorker.js","index.js","App/App.js"],"names":["Footer","react_default","a","createElement","className","href","newTodo","label","done","id","s4","Math","random","toString","substring","concat","guid","reducer","deleteTodo","state","filter","i","addTodo","Object","toConsumableArray","setDone","map","objectSpread","setLabel","toggleDone","globalReducer","JSON","parse","localStorage","getItem","todos","setItem","stringify","TodoItem","_ref","todo","_useTodos","useTodos","_useTodos2$","slicedToArray","_useState","useState","_useState2","editing","setEditing","onDelete","useCallback","onDone","onChange","event","target","value","handleViewClick","onClick","onDoubleClick","timeout","clicks","_len","arguments","length","rest","Array","_key","push","Date","getTime","clearTimeout","setTimeout","apply","useDoubleClick","ref","useRef","useOnClickOutside","type","checked","TodoList","callback","inputs","router","useRouter","_useTodos2","left","useMemo","reduce","p","c","visibleTodos","match","params","anyDone","some","allSelected","every","onToggleAll","forEach","onClearCompleted","_useInput","defaultValue","trim","setValue","useInput","_useInput2","newValue","onNewValueChange","onAddTodo","keyCode","preventDefault","Fragment","placeholder","onKeyDown","autoFocus","htmlFor","key","react_router_dom","exact","to","activeClassName","Boolean","window","location","hostname","root","document","getElementById","ReactDOM","createRoot","render","react_router","path","component","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9b293e82.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function Footer() {\r\n  return (\r\n    <footer className=\"info\">\r\n      <p>Double-click to edit a todo</p>\r\n      <p>\r\n        Created by <a href=\"http://github.com/jacob-ebey/\">jacob-ebey</a>\r\n      </p>\r\n      <p>\r\n        Part of <a href=\"http://todomvc.com\">TodoMVC</a>\r\n      </p>\r\n    </footer>\r\n  );\r\n}\r\n","import { globalReducer } from \"react-hook-utils\";\r\n\r\nimport { guid } from \"../utils\";\r\n\r\nexport const newTodo = label => ({ done: false, id: guid(), label });\r\n\r\nexport const reducer = {\r\n  // Delete a todo by id\r\n  deleteTodo: (state, id) => state.filter(i => i.id !== id),\r\n\r\n  // Create a new item\r\n  addTodo: (state, label) => [newTodo(label), ...state],\r\n\r\n  // Set the done state of an item\r\n  setDone: (state, id, done) =>\r\n    state.map(i =>\r\n      i.id === id\r\n        ? {\r\n            ...i,\r\n            done\r\n          }\r\n        : i\r\n    ),\r\n\r\n  // Set the label of an item\r\n  setLabel: (state, id, label) =>\r\n    state.map(i =>\r\n      i.id === id\r\n        ? {\r\n            ...i,\r\n            label\r\n          }\r\n        : i\r\n    ),\r\n\r\n  // Toggle an item done\r\n  toggleDone: (state, id) =>\r\n    state.map(i =>\r\n      i.id === id\r\n        ? {\r\n            ...i,\r\n            done: !i.done\r\n          }\r\n        : i\r\n    )\r\n};\r\n\r\nexport default globalReducer(\r\n  // Load todos from local storage\r\n  JSON.parse(localStorage.getItem(\"todos\") || \"[]\"),\r\n  reducer,\r\n  // On state change, persist to local storage\r\n  todos => localStorage.setItem(\"todos\", JSON.stringify(todos))\r\n);\r\n","export function guid() {\r\n  var s4 = () => {\r\n    return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n  };\r\n\r\n  return `${s4()}${s4()}-${s4()}-${s4()}-${s4()}-${s4()}${s4()}${s4()}`;\r\n}\r\n","import React, { useCallback, useRef, useState } from \"react\";\r\nimport useOnClickOutside from \"use-onclickoutside\";\r\n\r\nimport useDoubleClick from \"../hooks/useDoubleClick\";\r\nimport useTodos from \"../reducers/useTodos\";\r\n\r\nexport default function TodoItem({ todo }) {\r\n  const [, { deleteTodo, setLabel, toggleDone }] = useTodos(() => null);\r\n\r\n  const [editing, setEditing] = useState(false);\r\n\r\n  const onDelete = useCallback(() => deleteTodo(todo.id), [todo.id]);\r\n  const onDone = useCallback(() => toggleDone(todo.id), [todo.id]);\r\n  const onChange = useCallback(event => setLabel(todo.id, event.target.value), [\r\n    todo.id\r\n  ]);\r\n\r\n  const handleViewClick = useDoubleClick(null, () => setEditing(true));\r\n  const ref = useRef();\r\n  useOnClickOutside(ref, () => setEditing(false));\r\n\r\n  return (\r\n    <li\r\n      className={`${editing ? \"editing\" : \"\"} ${todo.done ? \"completed\" : \"\"}`}\r\n    >\r\n      <div ref={ref} className=\"view\" onClick={handleViewClick}>\r\n        <input\r\n          type=\"checkbox\"\r\n          className=\"toggle\"\r\n          checked={todo.done}\r\n          onChange={onDone}\r\n        />\r\n        <label>{todo.label}</label>\r\n        <button className=\"destroy\" onClick={onDelete} />\r\n      </div>\r\n      <input className=\"edit\" value={todo.label} onChange={onChange} />\r\n    </li>\r\n  );\r\n}\r\n","export default function useDoubleClick(onClick, onDoubleClick) {\r\n  let clicks = [];\r\n  let timeout;\r\n\r\n  return (event, ...rest) => {\r\n    clicks.push(new Date().getTime());\r\n\r\n    clearTimeout(timeout);\r\n    timeout = setTimeout(() => {\r\n      if (\r\n        clicks.length > 1 &&\r\n        clicks[clicks.length - 1] - clicks[clicks.length - 2] < 250\r\n      ) {\r\n        if (onDoubleClick) {\r\n          onDoubleClick(event, ...rest);\r\n        }\r\n      } else if (onClick) {\r\n        onClick(event, ...rest);\r\n      }\r\n      clicks = [];\r\n    }, 250);\r\n  };\r\n}\r\n","import React, { useCallback, useMemo } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport useRouter from \"use-react-router\";\r\n\r\nimport useInput from \"../hooks/useInput\";\r\nimport useOnEnter from \"../hooks/useOnEnter\";\r\nimport useTodos from \"../reducers/useTodos\";\r\nimport TodoItem from \"./TodoItem\";\r\n\r\nexport default function TodoList() {\r\n  const router = useRouter();\r\n\r\n  const [todos, { addTodo, deleteTodo, setDone }] = useTodos();\r\n\r\n  const left = useMemo(() => todos.reduce((p, c) => p + (c.done ? 0 : 1), 0), [\r\n    todos\r\n  ]);\r\n\r\n  const visibleTodos = useMemo(\r\n    () =>\r\n      router.match.params.filter\r\n        ? todos.filter(i =>\r\n            router.match.params.filter === \"active\" ? !i.done : i.done\r\n          )\r\n        : todos,\r\n    [todos, router.match.params.filter]\r\n  );\r\n\r\n  const anyDone = useMemo(() => todos.some(i => i.done), [todos]);\r\n  const allSelected = useMemo(() => visibleTodos.every(i => i.done), [\r\n    visibleTodos\r\n  ]);\r\n\r\n  const onToggleAll = useCallback(\r\n    () => {\r\n      visibleTodos.forEach(i => setDone(i.id, !allSelected));\r\n    },\r\n    [visibleTodos, allSelected]\r\n  );\r\n\r\n  const onClearCompleted = useCallback(\r\n    () => {\r\n      todos.forEach(i => {\r\n        if (i.done) {\r\n          deleteTodo(i.id);\r\n        }\r\n      });\r\n    },\r\n    [todos]\r\n  );\r\n\r\n  const [newValue, onNewValueChange] = useInput(\"\", true);\r\n  const onAddTodo = useOnEnter(\r\n    () => {\r\n      onNewValueChange({ target: { value: \"\" } });\r\n      addTodo(newValue);\r\n    },\r\n    [newValue]\r\n  );\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <header className=\"header\">\r\n        <h1>todos</h1>\r\n        <input\r\n          className=\"new-todo\"\r\n          placeholder=\"What needs to be done?\"\r\n          onKeyDown={onAddTodo}\r\n          autoFocus={true}\r\n          value={newValue}\r\n          onChange={onNewValueChange}\r\n        />\r\n      </header>\r\n\r\n      <section className=\"main\">\r\n        <input\r\n          id=\"toggle-all\"\r\n          type=\"checkbox\"\r\n          className=\"toggle-all\"\r\n          checked={allSelected}\r\n          onChange={onToggleAll}\r\n        />\r\n        <label htmlFor=\"toggle-all\" />\r\n        <ul className=\"todo-list\">\r\n          {visibleTodos.map(todo => (\r\n            <TodoItem key={todo.id} todo={todo} />\r\n          ))}\r\n        </ul>\r\n      </section>\r\n\r\n      <footer className=\"footer\">\r\n        <span className=\"todo-count\">\r\n          <strong>{left}</strong> items left\r\n        </span>\r\n        <ul className=\"filters\">\r\n          <li>\r\n            <NavLink exact={true} to=\"/\" activeClassName=\"selected\">\r\n              All\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink to=\"/active\" activeClassName=\"selected\">\r\n              Active\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink to=\"/completed\" activeClassName=\"selected\">\r\n              Completed\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n        {anyDone && (\r\n          <button className=\"clear-completed\" onClick={onClearCompleted}>\r\n            Clear completed\r\n          </button>\r\n        )}\r\n      </footer>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import { useCallback } from \"react\";\r\n\r\nexport default function useOnEnter(callback, inputs) {\r\n  return useCallback(event => {\r\n    if (event.keyCode !== 13) {\r\n      return;\r\n    }\r\n\r\n    event.preventDefault();\r\n    callback(event);\r\n  }, inputs);\r\n}\r\n","import { useCallback, useState } from \"react\";\r\n\r\nexport default function useInput(defaultValue, trim) {\r\n  const [value, setValue] = useState(defaultValue || \"\");\r\n\r\n  const onChange = useCallback(event => {\r\n    setValue(trim ? event.target.value.trim() : event.target.value);\r\n  });\r\n\r\n  return [value, onChange];\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport App from \"./App/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst root = document.getElementById(\"root\");\nReactDOM.createRoot(root).render(<App />);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from \"react\";\nimport { HashRouter, Route } from \"react-router-dom\";\nimport \"todomvc-app-css/index.css\";\n\nimport Footer from \"../components/Footer\";\nimport TodoList from \"../containers/TodoList\";\n\nexport default function App() {\n  return (\n    <HashRouter>\n      <React.Fragment>\n        <div className=\"todoapp\">\n          <Route path=\"/:filter?\" component={TodoList} />\n        </div>\n        <Footer />\n      </React.Fragment>\n    </HashRouter>\n  );\n}\n"],"sourceRoot":""}